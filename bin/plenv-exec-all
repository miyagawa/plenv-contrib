#!/usr/bin/env bash
#
# Summary: Runs specified command for all installed plenv versions
#
# Usage: plenv exec-all [--with <versions>] [--except <versions>] [--match <glob>] <command> <arg> ...
#        plenv exec-all --with 5.20.0,5.22.0 prove t/foo.t
#
# Runs specified command for all installed plenv versions,
# a'la perlbrew exec. Optional --with or --except options
# can be passed to specify which versions to run on or to
# exclude as comma-separated lists.

set -e
[ -n "$PLENV_DEBUG" ] && set -x

array_contains () {
  local elem
  for elem in ${@:2}; do [ "$elem" == "$1" ] && return 0; done
  return 1
}

# Options
unset with_versions
unset except_versions
unset match_versions
while [ "${1:0:2}" == "--" ]; do
  if [ "$1" == "--with" ]; then
    if [ -n "$2" ]; then
      with_versions=("${with_versions[@]}" "${2//,/ }")
    else
      echo "No argument to --with"
      exit 1
    fi
    shift 2
  elif [ "$1" == "--except" ]; then
    if [ -n "$2" ]; then
      except_versions=("${except_versions[@]}" "${2//,/ }")
    else
      echo "No argument to --except"
      exit 1
    fi
    shift 2
  elif [ "$1" == "--match" ]; then
    if [ -n "$2" ]; then
      match_versions="$2"
    else
      echo "No argument to --match"
      exit 1
    fi
    shift 2
  else
    echo "Unknown option $1"
    exit 1
  fi
done

if [ "$#" -eq 0 ]; then
  echo "Usage: plenv exec-all [--with <versions>] [--except <versions>] [--match <glob>] <command> <arg> ..."
  exit 1
fi

shopt -s extglob # Allow --match 5.@(18|22|30)
for path in "${PLENV_ROOT}/versions/"${match_versions-*}; do
  if [ -d "$path" ]; then
    this_version="${path##*/}"
    if [ ${#except_versions[@]} -ne 0 ] && array_contains "$this_version" "${except_versions[@]}"; then continue; fi
    if [ ${#with_versions[@]} -ne 0 ] && ! array_contains "$this_version" "${with_versions[@]}"; then continue; fi
    echo "$this_version"
    echo "=========="
    PLENV_VERSION="$this_version" plenv exec "$@"
    echo
  fi
done
